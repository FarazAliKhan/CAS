@page
@model IndexModel

@{
    Layout = null;
}
<!DOCTYPE html>
<html class="js backgroundsize borderimage csstransitions fontface svg details progressbar meter mathml cors smallview" lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head class="at-element-marker">

    <meta charset="utf-8">
    <!-- Web Experience Toolkit (WET) / Boîte à outils de l'expérience Web (BOEW) wet-boew.github.io/wet-boew/License-en.html / wet-boew.github.io/wet-boew/Licence-fr.html -->
    <title>CAS</title>
    <link rel="schema.dcterms" href="http://purl.org/dc/terms/">
    <meta content="width=device-width,initial-scale=1" name="viewport">
    <meta name="description" content="The Government of Canada website is a single point of access to all programs, services, departments, ministries and organizations of the Government of Canada.">
    <meta name="dcterms.description" content="The Government of Canada website is a single point of access to all programs, services, departments, ministries and organizations of the Government of Canada.">
    <meta name="dcterms.creator" content="Service Canada">
    <meta name="dcterms.title" content="Canada.ca">
    <meta name="dcterms.issued" title="W3CDTF" content="2015-10-06">
    <meta name="dcterms.modified" title="W3CDTF" content="2022-10-19">
    <meta name="dcterms.subject" content="Government and Politics,Government services">
    <meta name="dcterms.language" title="ISO639-2" content="eng">
    <meta name="robots" content="noindex, follow">
    <meta property="dcterms:issued" content="2015-10-06">
    <meta property="dcterms:modified" content="2022-10-19">
    <meta property="dcterms:title" lang="en" content="Canada.ca">
    <meta property="dcterms:creator" lang="en" content="Service Canada">
    <meta property="dcterms:subject" lang="en" title="gccore" content="Government and Politics,Government services">
    <meta property="dcterms:description" lang="en" content="The Government of Canada website is a single point of access to all programs, services, departments, ministries and organizations of the Government of Canada.">
    <meta property="dcterms:title" lang="fr" content="Canada.ca">
    <meta property="dcterms:creator" lang="fr" content="Service Canada">
    <meta property="dcterms:subject" lang="fr" title="gccore" content="Gouvernement et vie politique,Services gouvernementaux">
    <meta property="dcterms:description" lang="fr" content="Le site Web du gouvernement du Canada fournit un point d'accès complet à tous les programmes, services, départements, ministères et organismes du gouvernement du Canada.">

    <link rel="apple-touch-icon" sizes="57x57 72x72 114x114 144x144 150x150" class="wb-favicon" href="~/lib/themes-dist-17.2.0-gcweb/GCWeb/assets/favicon-mobile.png">
    <link href="~/lib/themes-dist-17.2.0-gcweb/GCWeb/assets/favicon.ico" rel="icon" type="image/x-icon" class="wb-init wb-favicon-inited">
    <link rel="stylesheet" href="~/lib/themes-dist-17.2.0-gcweb/GCWeb/css/theme.css">
    <noscript><link rel="stylesheet" href="~/lib/themes-dist-17.2.0-gcweb/GCWeb/css/noscript.css" /></noscript>
    <link rel="stylesheet" href="~/lib/themes-dist-17.2.0-gcweb/GCWeb/css/messages.css">



    <iframe src="javascript:void(0)" title="" role="presentation" style="width: 0px; height: 0px; border: 0px; display: none;"></iframe>
    <script src="https://www.canada.ca/etc/designs/canada/wet-boew/js/i18n/en.min.js"></script>
    <script src="//assets.adobedtm.com/be5dfd287373/abb618326704/launch-3eac5e076135.min.js"></script>
    <script src="https://assets.adobedtm.com/extensions/EP31dbb9c60e404ba1aa6e746d49be6f29/AppMeasurement.min.js" async=""></script>
    <script src="https://assets.adobedtm.com/extensions/EP31dbb9c60e404ba1aa6e746d49be6f29/AppMeasurement_Module_ActivityMap.min.js" async=""></script>






    <script>!function (a) { var e = "https://s.go-mpulse.net/boomerang/", t = "addEventListener"; if ("False" == "True") a.BOOMR_config = a.BOOMR_config || {}, a.BOOMR_config.PageParams = a.BOOMR_config.PageParams || {}, a.BOOMR_config.PageParams.pci = !0, e = "https://s2.go-mpulse.net/boomerang/"; if (window.BOOMR_API_key = "KBFUZ-C9D7G-RB8SX-GRGEN-HGMC9", function () { function n(e) { a.BOOMR_onload = e && e.timeStamp || (new Date).getTime() } if (!a.BOOMR || !a.BOOMR.version && !a.BOOMR.snippetExecuted) { a.BOOMR = a.BOOMR || {}, a.BOOMR.snippetExecuted = !0; var i, _, o, r = document.createElement("iframe"); if (a[t]) a[t]("load", n, !1); else if (a.attachEvent) a.attachEvent("onload", n); r.src = "javascript:void(0)", r.title = "", r.role = "presentation", (r.frameElement || r).style.cssText = "width:0;height:0;border:0;display:none;", o = document.getElementsByTagName("script")[0], o.parentNode.insertBefore(r, o); try { _ = r.contentWindow.document } catch (O) { i = document.domain, r.src = "javascript:var d=document.open();d.domain='" + i + "';void(0);", _ = r.contentWindow.document } _.open()._l = function () { var a = this.createElement("script"); if (i) this.domain = i; a.id = "boomr-if-as", a.src = e + "KBFUZ-C9D7G-RB8SX-GRGEN-HGMC9", BOOMR_lstart = (new Date).getTime(), this.body.appendChild(a) }, _.write("<bo" + 'dy onload="document._l();">'), _.close() } }(), "".length > 0) if (a && "performance" in a && a.performance && "function" == typeof a.performance.setResourceTimingBufferSize) a.performance.setResourceTimingBufferSize(); !function () { if (BOOMR = a.BOOMR || {}, BOOMR.plugins = BOOMR.plugins || {}, !BOOMR.plugins.AK) { var e = "" == "true" ? 1 : 0, t = "", n = "3di4ihax3ugie2fmagmq-f-7af31a6f9-clientnsv4-s.akamaihd.net", i = "false" == "true" ? 2 : 1, _ = { "ak.v": "39", "ak.cp": "652942", "ak.ai": parseInt("231651", 10), "ak.ol": "0", "ak.cr": 8, "ak.ipv": 4, "ak.proto": "h2", "ak.rid": "a77161dc", "ak.r": 46664, "ak.a2": e, "ak.m": "dscb", "ak.n": "essl", "ak.bpcip": "216.209.196.0", "ak.cport": 54011, "ak.gh": "23.43.161.140", "ak.quicv": "", "ak.tlsv": "tls1.3", "ak.0rtt": "", "ak.0rtt.ed": "", "ak.csrc": "-", "ak.acc": "", "ak.t": "1756103065", "ak.ak": "hOBiQwZUYzCg5VSAfCLimQ==mcWVe8l/taCfMffb59dXxM7wMEVzClShiIASH8Kn2bYt2HxpsGIKqe3M1KfqUVwFpxIhaSGErtQQYr15Q9v9Gr6yHcdpz2AN6Eo3fjzOcNQXGUoVPeZ9RwbMWx33rdks2IfBAP4puHWSKScU1PoxwlYme0npAf8njwCJA9BXQq28ivWg2vW1Ph58XCTRuRq2PDpe4wi+IIPdG8ugT1cxgsYKrV5l1ld4QD2gZbgcvx0K24fdZ8Nf1NWQXLX8hzF1RofqATp2tRLC/aQ56AO8o0+PhWQNKu6DXcCORibiHR6rq3nEXcbzJX/htT9TtsiJP6lSKy78F5A+W/2vFKiFxBatkVE/tb4piU0AVReKKVK37ZB5zPjTqY0dtOxRbjPCVIw3T2x3LPDLiQ4TzrW0qNILUUpgTk08On2P7HdiN88=", "ak.pv": "810", "ak.dpoabenc": "", "ak.tf": i }; if ("" !== t) _["ak.ruds"] = t; var o = { i: !1, av: function (e) { var t = "http.initiator"; if (e && (!e[t] || "spa_hard" === e[t])) _["ak.feo"] = void 0 !== a.aFeoApplied ? 1 : 0, BOOMR.addVar(_) }, rv: function () { var a = ["ak.bpcip", "ak.cport", "ak.cr", "ak.csrc", "ak.gh", "ak.ipv", "ak.m", "ak.n", "ak.ol", "ak.proto", "ak.quicv", "ak.tlsv", "ak.0rtt", "ak.0rtt.ed", "ak.r", "ak.acc", "ak.t", "ak.tf"]; BOOMR.removeVar(a) } }; BOOMR.plugins.AK = { akVars: _, akDNSPreFetchDomain: n, init: function () { if (!o.i) { var a = BOOMR.subscribe; a("before_beacon", o.av, null, null), a("onbeacon", o.rv, null, null), o.i = !0 } return this }, is_complete: function () { return !0 } } } }() }(window);</script>
</head>

<body class="splash" vocab="http://schema.org/" typeof="WebPage" resource="#wb-webpage">



    <script>
        // allowlist/blocklist

        /*
         * Domain allowlist and domain specific settings
        */

        //make sure to update thisDomain with nulls!!!
        _satellite.gcCustom = {
            domain_blocklist: [
                '/analytique-analytics/',
                'checkingvisa.com',
                //'canada-aem-s3-stage.adobecqms.net/en/services/immigration-citizenship.html'
            ],
            protocol_blocklist: ['javascript:', 'mailto:', 'tel:', 'blob:', 'data:'],

            /*Follow this syntax for adding items to the whitelist
            Double check and confirm you are adding to the STAGE or LIVE whitelist
            Double check spelling and syntax for errors
            */
            thisDomain: { AppName: null, LoginStatus: null },
            domain_allowlist: {
                //this allows Analytics tracking
                stage: {
                    //EXAMPLE:
                    //--- all items MUST inlcude a comma in order to append another line item
                    //--- last item does not use comma
                    // Canada.ca
                    'www.canada.ca': { AppName: 'canada', LoginStatus: '2' },
                    'canada.ca': { AppName: 'canada', LoginStatus: '2' },
                    'staging65s3.canada.ca': { AppName: 'canada', LoginStatus: '2' },
                    'canada-stage-aem-s3-preview.adobecqms.net': { AppName: 'canada', LoginStatus: '2' },
                    'canada-preview.adobecqms.net': { AppName: 'canada', LoginStatus: '2' }, // testing
                    'author-canada-aem-s3-stage.adobecqms.net': { AppName: 'canada', LoginStatus: '2' },
                    'canada-aem-s3-stage.adobecqms.net': { AppName: 'canada', LoginStatus: '2' },
                    'publish4cacentral1.prod.canada.adobecqms.net': { AppName: 'canada', LoginStatus: '2' },
                    'publish2cacentral1.prod.canada.adobecqms.net': { AppName: 'canada', LoginStatus: '2' },
                    //'author-canada-prod.adobecqms.net': { AppName: 'canada', LoginStatus: '2' },
                    //BookingTool
                    'apps.canada.ca': { AppName: 'canada', LoginStatus: '2' },
                    'iv.apps.canada.ca': { AppName: 'canada', LoginStatus: '2' },
                    'gcbooking.adobecqms.net': { AppName: 'canada', LoginStatus: '2' },
                    // Search
                    'search-recherche.gc.ca': { AppName: null, LoginStatus: null },
                    'www.search-recherche.gc.ca': { AppName: null, LoginStatus: null },
                    'recherche-search.gc.ca': { AppName: null, LoginStatus: null },
                    'www.recherche-search.gc.ca': { AppName: null, LoginStatus: null },
                    'search.gc.ca': { AppName: null, LoginStatus: null },
                    'www.search.gc.ca': { AppName: null, LoginStatus: null },
                    'recherche.gc.ca': { AppName: null, LoginStatus: null },
                    'www.recherche.gc.ca': { AppName: null, LoginStatus: null },
                    'wpaz-ofm12c-ssl-i.services.gc.qat': { AppName: null, LoginStatus: null },
                    'staging-recherche.gc.ca': { AppName: null, LoginStatus: null },
                    'wpaz-ofm-i.sade-edap.prv': { AppName: null, LoginStatus: null },
                    'wpaz-ofm-i-e-esdc.services.gc.qat': { AppName: null, LoginStatus: null },
                    'travel.gc.ca': { AppName: null, LoginStatus: null },// testing





                },
                live: {
                    //EXAMPLE:
                    //'...' : {AppName : null, LoginStatus : null}
                    // Canada.ca
                    'www.canada.ca': { AppName: 'canada', LoginStatus: '2' },
                    'canada.ca': { AppName: 'canada', LoginStatus: '2' },
                    'www1.canada.ca': { AppName: 'canada', LoginStatus: '2' },
                    'apps.canada.ca': { AppName: null, LoginStatus: null },
                    'iv.apps.canada.ca': { AppName: null, LoginStatus: null },
                    'v.apps.canada.ca': { AppName: null, LoginStatus: null },
                    //SP22Testing
                    'publish1cacentral1-28999926.prod.canada.adobecqms.net': { AppName: 'canada', LoginStatus: '2' },
                    // Search
                    'search-recherche.gc.ca': { AppName: null, LoginStatus: null },
                    'www.search-recherche.gc.ca': { AppName: null, LoginStatus: null },
                    'recherche-search.gc.ca': { AppName: null, LoginStatus: null },
                    'www.recherche-search.gc.ca': { AppName: null, LoginStatus: null },
                    'search.gc.ca': { AppName: null, LoginStatus: null },
                    'www.search.gc.ca': { AppName: null, LoginStatus: null },
                    'recherche.gc.ca': { AppName: null, LoginStatus: null },
                    'www.recherche.gc.ca': { AppName: null, LoginStatus: null }

                },

            },
            internal_filters: [
                //Internal filters last updated on: 2025-08-07
                //Sites to be added to master list
                //staging
                //Prod

                //CANADA.CA (AEM)
                //staging
                'staging65s3.canada.ca',
                'canada-stage-aem-s3-preview.adobecqms.net',
                'canada-aem-s3-stage.adobecqms.net',
                'author-canada-aem-s3-stage.adobecqms.net',
                'canada-aem-s3-stage.adobecqms.net',
                'publish4cacentral1.prod.canada.adobecqms.net',
                'publish2cacentral1.prod.canada.adobecqms.net',
                //BookingTool
                'gcbooking.adobecqms.net',
                // Search
                'wpaz-ofm12c-ssl-i.services.gc.qat',
                'staging-recherche.gc.ca',
                'wpaz-ofm-i.sade-edap.prv',
                'wpaz-ofm-i-e-esdc.services.gc.qat',
                'travel.gc.ca',
                //prod
                'www.canada.ca',
                'canada.ca',
                'www1.canada.ca',
                //BookingTool
                'apps.canada.ca',
                'iv.apps.canada.ca',
                'v.apps.canada.ca',
                //Page Analytics Tool
                'performance.alpha.canada.ca',
                // Search
                'search-recherche.gc.ca',
                'www.search-recherche.gc.ca',
                'recherche-search.gc.ca',
                'www.recherche-search.gc.ca',
                'search.gc.ca',
                'www.search.gc.ca',
                'recherche.gc.ca',
                'www.recherche.gc.ca',

                //Agriculture and Agri Food Canada
                //staging
                'agr-wcag.agr.gc.ca',
                'www-tst.agr.gc.ca',
                'www.agriculture-canada-uat.agr.gc.ca',
                'agriculture-canada-uat.agr.gc.ca',
                'siswebdev.agr.gc.ca',
                'cms-dev.agr.gc.ca',
                'cms-test.agr.gc.ca',
                'cansvmn001.agr.gc.ca',
                'agr-qa.agr.gc.ca',
                //Prod
                'www.agr.gc.ca',
                'agr.gc.ca',
                'sis.agr.gc.ca',
                'agrisource.agr.gc.ca',
                'agriculture.canada.ca',
                'www.agriculture.canada.ca',
                'www.aimis-simia.agr.gc.ca',
                'aimis-simia.agr.gc.ca',
                'www.aimis-simia-cdic-ccil.agr.gc.ca',
                'aimis-simia-cdic-ccil.agr.gc.ca',
                'marquecanadabrand.agr.gc.ca',
                'www.marquecanadabrand.agr.gc.ca',
                'brandcanada.agr.gc.ca',
                'www.brandcanada.agr.gc.ca',
                'canadabrand.agr.gc.ca',
                'www.canadabrand.agr.gc.ca',

                //Administrative Tribunals Support Service of Canada/Social Security Tribunal of Canada
                //staging
                'sst-stage.stage.atssc-scdata.gc.ca',
                //Prod
                'sst-tss.gc.ca',
                'www.sst-tss.gc.ca',

                //Canadian Food Inspection Agency
                //staging
                'wwwqa.inspection.gc.ca',
                'www.notification-dev.inspection.canada.ca',
                'notification-dev.inspection.canada.ca',
                'dev.inspection.gc.ca',
                //Prod
                'active.inspection.gc.ca',
                'apps.merlin.cfia-acia.inspection.gc.ca',
                'inspection.canada.ca',
                'inspection.gc.ca',
                'merlin.cfia-acia.inspection.gc.ca',
                'notification.inspection.canada.ca',
                'www.active.inspection.gc.ca',
                'www.apps.merlin.cfia-acia.inspection.gc.ca',
                'www.inspection.canada.ca',
                'www.inspection.gc.ca',
                'www.merlin.cfia-acia.inspection.gc.ca',
                'www.notification.inspection.canada.ca',
                'www.webapps.merlin.cfia-acia.inspection.gc.ca',
                'webapps.merlin.cfia-acia.inspection.gc.ca',

                //Canada Economic Development for Quebec Regions
                //staging
                'decstaging.etcodev.tgiprojects.com',
                'www.decstaging.etcodev.tgiprojects.com',
                //Prod
                'www.dec.canada.ca',
                'dec.canada.ca',
                'ced.canada.ca',
                'www.ced.canada.ca',

                //Canada Revenue Agency
                //staging
                'www.staging.omega.dce-eir.net',
                'staging.omega.dce-eir.net',
                'canada-preview.adobecqms.net',
                //CRA Secure Portal UT
                'cp-ut.isvcs.net',
                'rp-ut.isvcs.net',
                'cp-ut2.isvcs.net',
                'rp-ut2.isvcs.net',
                'rp-ut4.isvcs.net',
                //CRA Secure Portal EF
                'rp-ef.isvcs.net',
                'cp-ef.isvcs.net',
                //CRA Secure Portal EA
                'rp-ea.isvcs.net',
                'cp-ea.isvcs.net',
                //CRA Secure Portal SI
                'ams-sga-si.cra-arc.gc.ca',
                'cms-sgj-si.cra-arc.gc.ca',
                'ams-sga-si2.cra-arc.gc.ca',
                'cms-sgj-si2.cra-arc.gc.ca',
                //CRA Secure Portal UA
                'ams-sga-ua.cra-arc.gc.ca',
                'cms-sgj-ua.cra-arc.gc.ca',
                'ams-sga-ua2.cra-arc.gc.ca',
                'cms-sgj-ua2.cra-arc.gc.ca',
                //CRA Secure Portal OT
                'apps1.ams-sga-ot.cra-arc.gc.ca',
                'apps2.ams-sga-ot.cra-arc.gc.ca',
                'apps3.ams-sga-ot.cra-arc.gc.ca',
                'apps4.ams-sga-ot.cra-arc.gc.ca',
                'apps5.ams-sga-ot.cra-arc.gc.ca',
                'apps6.ams-sga-ot.cra-arc.gc.ca',
                'apps7.ams-sga-ot.cra-arc.gc.ca',
                'apps8.ams-sga-ot.cra-arc.gc.ca',
                'cms-sgj-ot.cra-arc.gc.ca',
                'apps1.ams-sga-ot2.cra-arc.gc.ca',
                'apps2.ams-sga-ot2.cra-arc.gc.ca',
                'apps3.ams-sga-ot2.cra-arc.gc.ca',
                'apps4.ams-sga-ot2.cra-arc.gc.ca',
                'apps5.ams-sga-ot2.cra-arc.gc.ca',
                'apps6.ams-sga-ot2.cra-arc.gc.ca',
                'apps7.ams-sga-ot2.cra-arc.gc.ca',
                'apps8.ams-sga-ot2.cra-arc.gc.ca',
                'cms-sgj-ot2.cra-arc.gc.ca',
                //CRA Non Secure Portal UT
                'apps-ut.isvcs.net',
                'apps-ut2.isvcs.net',
                'apps-ut.cra-arc.gc.ca',
                'apps-ut2.cra-arc.gc.ca',
                'rp-ut.isvcs.net/gol-ged/mima/ngbeta/#/bus/',
                //CRA Non Secure Portal SI
                'apps-si.isvcs.net',
                'apps-si2.isvcs.net',
                //CRA Non Secure Portal UA
                'apps-ua.cra-arc.gc.ca',
                'apps-ua2.cra-arc.gc.ca',
                'apps-ua.isvcs.net',
                'apps-ua2.isvcs.net',
                //CRA Non Secure Portal OT
                'apps-ot.cra-arc.gc.ca',
                'apps-ot.isvcs.net',
                //CRA Non Secure Portal EF
                'apps-ef.isvcs.net',
                //CRA Non Scure Portal EA
                //Prod
                'ams-sga.cra-arc.gc.ca',
                'cms-sgj.cra-arc.gc.ca',
                'apps1.ams-sga.cra-arc.gc.ca',
                'apps2.ams-sga.cra-arc.gc.ca',
                'apps3.ams-sga.cra-arc.gc.ca',
                'apps4.ams-sga.cra-arc.gc.ca',
                'apps5.ams-sga.cra-arc.gc.ca',
                'apps6.ams-sga.cra-arc.gc.ca',
                'apps7.ams-sga.cra-arc.gc.ca',
                'apps8.ams-sga.cra-arc.gc.ca',
                'www.ams-sga.cra-arc.gc.ca',
                'www.cms-sgj.cra-arc.gc.ca',
                'www.apps.cra-arc.gc.ca',
                'www.apps1.ams-sga.cra-arc.gc.ca',
                'www.apps2.ams-sga.cra-arc.gc.ca',
                'www.apps3.ams-sga.cra-arc.gc.ca',
                'www.apps4.ams-sga.cra-arc.gc.ca',
                'www.apps5.ams-sga.cra-arc.gc.ca',
                'www.apps6.ams-sga.cra-arc.gc.ca',
                'www.apps7.ams-sga.cra-arc.gc.ca',
                'www.apps8.ams-sga.cra-arc.gc.ca',
                'arc-cra.gc.ca',
                'arc.gc.ca',
                'apps.cra-arc.gc.ca',
                'cra-arc.gc.ca',
                'cra.gc.ca',
                'www.arc-cra.gc.ca',
                'www.arc.gc.ca',
                'www.cra-arc.gc.ca',
                'www.cra.gc.ca',

                //Canadian Space Agency
                //staging
                'devcorpo',
                //Prod
                'www.asc-csa.gc.ca',
                'asc-csa.gc.ca',
                'csa-asc.gc.ca',
                'www.csa-asc.gc.ca',
                'www4.asc-csa.gc.ca',
                'donnees-data.asc-csa.gc.ca',

                //Communications Security Establishment
                //staging
                'dev-cse-cst.hiringplatform.ca',
                'cccs-uat.web.app.cse-cst.gc.ca',
                'cse-cst-uat.web.app.cse-cst.gc.ca',
                'getcybersafe-uat.web.app.cse-cst.gc.ca',
                'pensezcybersecurite-uat.web.app.cse-cst.gc.ca',
                //prod
                'cse-cst.hiringplatform.ca',
                'www.cse-cst.gc.ca',
                'cse-cst.gc.ca',
                'www.cyber.gc.ca',
                'cyber.gc.ca',
                'www.getcybersafe.gc.ca',
                'getcybersafe.gc.ca',
                'www.pensezcybersecurite.gc.ca',
                'pensezcybersecurite.gc.ca',

                //Elections Canada
                //staging
                'ec9wbisprev01.elections.ca',
                'ec9sttswbrev01.elections.ca',
                'ec9stvwbpfpi01.elections.ca',
                'test.elections.ca',
                'ec9stvwbpfpi01',
                'EC9STVWBPFPI01',
                'ispdevwww.elections.ca',
                'www.test.elections.ca',
                //Prod
                'www.elections.ca',
                'elections.ca',
                'secure.elections.ca',
                'enr.elections.ca',
                'www.cef-cce.ca',
                'cef-cce.ca',
                'ereg.elections.ca',
                'csep-pesc.elections.ca',
                'www.redecoupage-redistribution-2022.ca',
                'redecoupage-redistribution-2022.ca',


                // Employment and Social Development Canada
                //staging
                'int16-ssl.services.gc.qat',
                'www.int16-ssl.services.gc.qat',
                'secure-client-hub-dev.bdm.dshp-phdn.net',
                'sys1.jobbank.gc.qat',
                'sys1.guichetemplois.gc.qat',
                'passport-status-staging.dev-dp.dts-stn.com',
                'int-srv265.services.gc.qat',
                'seniors-journey-staging.dev-dp.dts-stn.com',
                'passport-status-test.dev-dp.dts-stn.com',
                'srv241-s2.sade.hrdc-drhc.gc.ca',
                'uat.cva.service.cloud-nuage.canada.ca',
                'sys16-ssl.services.gc.qat',
                'secure-client-hub-staging.bdm.dshp-phdn.net',
                'test-org-platform.nonprod.youth-jeunesse.service.canada.ca',
                'test-org-platform-intake.nonprod.youth-jeunesse.service.canada.ca',
                'cdcp-int.dev-dp.dts-stn.com',
                'cdcp-staging.dev-dp.dts-stn.com',
                'cdcp-staging.dev-dp-internal.dts-stn.com',
                'esdc-bdm-ei-dev-benefitestimator-fe-cc-staging.azurewebsites.net',
                'esdc-bdm-ei-dev-benefitestimator-fe-cc.azurewebsites.net',
                'test-org-platform.dev-dp.dts-stn.com',
                'srv113-s.sade.hrdc-drhc.gc.ca',
                'mscad-sys2-s2.bdm.dshp-phdn.net',
                'secure-client-hub-dev.bdm-dev-rhp.dts-stn.com',
                'N35010293.hrdc-drhc.net',
                'mscad-sys2-s3.bdm.dshp-phdn.net',
                'n35010293.hrdc-drhc.net',
                'eservice-uat.powerappsportals.com',
                'dev-org-platform.dev-dp.dts-stn.com',
                'dev-ydg.dev-dp.dts-stn.com',
                'www.analytics-analytique.tbs.alpha.canada.ca',
                'analytics-analytique.tbs.alpha.canada.ca',
                'canadadental-sandbox.powerappsportals.com',
                'app-servicecanadalabs-dev.azurewebsites.net',
                'lmi-imt-website-uat.dev-dp-internal.dts-stn.com',
                'dev.horizons.service.canada.ca',
                'test.horizons.service.canada.ca',
                'dev.cms-sgc.esdc-edsc.canada.ca',
                'dev.cms-sgc.service.cloud-nuage.canada.ca',
                'test.cms-sgc.esdc-edsc.canada.ca',
                'test.cms-sgc.service.cloud-nuage.canada.ca',
                'app-ewcms-e2e-canadacentral.azurewebsites.net',
                'dev.prv.esdc-edsc.canada.ca',
                'dev.prv.service.cloud-nuage.canada.ca',
                'test.prv.esdc-edsc.canada.ca',
                'test.prv.service.cloud-nuage.canada.ca',
                'ste2eesdc.z9.web.core.windows.net',
                'dev.iservice.esdc-edsc.canada.ca',
                'dev.iservice.service.cloud-nuage.canada.ca',
                'test.iservice.esdc-edsc.canada.ca',
                'ste2eiservice.z9.web.core.windows.net',
                'dev.red-seal.ca',
                'dev.red-seal.service.cloud-nuage.canada.ca',
                'test.red-seal.ca',
                'test.red-seal.service.cloud-nuage.canada.ca',
                'ste2eredseal.z9.web.core.windows.net',
                'dev.ellischart.ca',
                'dev.ellischart.service.cloud-nuage.canada.ca',
                'test.ellischart.ca',
                'test.ellischart.service.cloud-nuage.canada.ca',
                'ste2eellischart.z9.web.core.windows.net',
                'cdcp-uat1.dev-dp.dts-stn.com',
                'cdcp-uat1.dev-dp-internal.dts-stn.com',
                'srv241-s2.sade.hrdc-drhc.gc.ca',
                'mscad-sys2-s1.bdm.dshp-phdn.net',
                'cdb-estimator-dev.dev-dp.dts-stn.com',
                'cdb-estimator-staging.dev-dp.dts-stn.com',
                'n35128202.hrdc-drhc.net',
                'fsco-tbsc-uat.swac-wsca.service.canada.ca',
                'uat.bureaux.service.canada.ca',
                'deploy-preview-202--blog-tbs.netlify.app',
                'deploy-preview-202--blogue-sct.netlify.app',
                'deploy-preview-203--blog-tbs.netlify.app',
                'deploy-preview-203--blogue-sct.netlify.app',
                'design-system-canada-ca.netlify.app',
                'systeme-conception-canada-ca.netlify.app',
                'cms-sgc.esdc-edsc.canada.ca',
                'deploy-preview-530--design-system-canada-ca.netlify.app',
                'deploy-preview-393--systeme-conception-canada-ca.netlify.app',
                'cdb-int.dev-dp-internal.dts-stn.com',
                //Prod
                'srv265.hrdc-drhc.gc.ca',
                'srv136.services.gc.ca',
                'www.srv136.services.gc.ca',
                'psjobs-emploisfp.psc-cfp.gc.ca',
                'emploisfp-psjobs.cfp-psc.gc.ca',
                'www.cva.service.canada.ca',
                'cva.service.canada.ca',
                'www.pbc.service.canada.ca',
                'pbc.service.canada.ca',
                'www.jobbank.gc.ca',
                'www.guichetemplois.gc.ca',
                'estimateursv-oasestimator.service.canada.ca',
                'www.estimateursv-oasestimator.service.canada.ca',
                'retraite-retirement.service.canada.ca',
                'www.retraite-retirement.service.canada.ca',
                'service.canada.ca',
                'www.service.canada.ca',
                'equivision.services.gc.ca',
                'www.equivision.services.gc.ca',
                'srv024.service.canada.ca',
                'on.jobbank.gc.ca',
                'www.on.jobbank.gc.ca',
                'sk.jobbank.gc.ca',
                'www.sk.jobbank.gc.ca',
                'ab.jobbank.gc.ca',
                'www.ab.jobbank.gc.ca',
                'bc.jobbank.gc.ca',
                'www.bc.jobbank.gc.ca',
                'mb.jobbank.gc.ca',
                'www.mb.jobbank.gc.ca',
                'nb.jobbank.gc.ca',
                'www.nb.jobbank.gc.ca',
                'nl.jobbank.gc.ca',
                'www.nl.jobbank.gc.ca',
                'ns.jobbank.gc.ca',
                'www.ns.jobbank.gc.ca',
                'nt.jobbank.gc.ca',
                'www.nt.jobbank.gc.ca',
                'nu.jobbank.gc.ca',
                'www.nu.jobbank.gc.ca',
                'qc.jobbank.gc.ca',
                'www.qc.jobbank.gc.ca',
                'pe.jobbank.gc.ca',
                'www.pe.jobbank.gc.ca',
                'yt.jobbank.gc.ca',
                'www.yt.jobbank.gc.ca',
                'on.guichetemplois.gc.ca',
                'www.on.guichetemplois.gc.ca',
                'sk.guichetemplois.gc.ca',
                'www.sk.guichetemplois.gc.ca',
                'ab.guichetemplois.gc.ca',
                'www.ab.guichetemplois.gc.ca',
                'bc.guichetemplois.gc.ca',
                'www.bc.guichetemplois.gc.ca',
                'mb.guichetemplois.gc.ca',
                'www.mb.guichetemplois.gc.ca',
                'nb.guichetemplois.gc.ca',
                'www.nb.guichetemplois.gc.ca',
                'nl.guichetemplois.gc.ca',
                'www.nl.guichetemplois.gc.ca',
                'ns.guichetemplois.gc.ca',
                'www.ns.guichetemplois.gc.ca',
                'nt.guichetemplois.gc.ca',
                'www.nt.guichetemplois.gc.ca',
                'nu.guichetemplois.gc.ca',
                'www.nu.guichetemplois.gc.ca',
                'qc.guichetemplois.gc.ca',
                'www.qc.guichetemplois.gc.ca',
                'pe.guichetemplois.gc.ca',
                'www.pe.guichetemplois.gc.ca',
                'yt.guichetemplois.gc.ca',
                'www.yt.guichetemplois.gc.ca',
                'employer.jobbank.gc.ca',
                'www.employer.jobbank.gc.ca',
                'employeur.guichetemplois.gc.ca',
                'www.employeur.guichetemplois.gc.ca',
                'estimateurae-eiestimator.service.canada.ca',
                'www.youth-jeunesse.service.canada.ca',
                'youth-jeunesse.service.canada.ca',
                'covid-benefits.alpha.canada.ca',
                'covid-prestations.alpha.canada.ca',
                'alpha.service.canada.ca',
                'dpl-bmd.alpha.service.canada.ca',
                'digital.canada.ca',
                'numerique.canada.ca',
                'www.esdc.prv',
                'esdc.prv',
                'www.iservice.prv',
                'iservice.prv',
                'www.edsc.prv',
                'edsc.prv',
                'www.red-seal.ca',
                'red-seal.ca',
                'www.sceau-rouge.ca',
                'sceau-rouge.ca',
                'www.ellischart.ca',
                'ellischart.ca',
                'www.tableauellis.ca',
                'tableauellis.ca',
                'www.srv138.services.gc.ca',
                'srv138.services.gc.ca',
                'benefitsfinder.services.gc.ca',
                'www.benefitsfinder.services.gc.ca',
                'multi-benefits.servicecanada.gc.ca',
                'multi-benefices.servicecanada.gc.ca',
                'srv024.service.canada.ca',
                'on-employer.jobbank.gc.ca',
                'www.on-employer.jobbank.gc.ca',
                'sk-employer.jobbank.gc.ca',
                'www.sk-employer.jobbank.gc.ca',
                'ab-employer.jobbank.gc.ca',
                'www.ab-employer.jobbank.gc.ca',
                'bc-employer.jobbank.gc.ca',
                'www.bc-employer.jobbank.gc.ca',
                'mb-employer.jobbank.gc.ca',
                'www.mb-employer.jobbank.gc.ca',
                'nb-employer.jobbank.gc.ca',
                'www.nb-employer.jobbank.gc.ca',
                'nl-employer.jobbank.gc.ca',
                'www.nl-employer.jobbank.gc.ca',
                'ns-employer.jobbank.gc.ca',
                'www.ns-employer.jobbank.gc.ca',
                'nt-employer.jobbank.gc.ca',
                'www.nt-employer.jobbank.gc.ca',
                'nu-employer.jobbank.gc.ca',
                'www.nu-employer.jobbank.gc.ca',
                'qc-employer.jobbank.gc.ca',
                'www.qc-employer.jobbank.gc.ca',
                'pe-employer.jobbank.gc.ca',
                'www.pe-employer.jobbank.gc.ca',
                'yt-employer.jobbank.gc.ca',
                'www.yt-employer.jobbank.gc.ca',
                'on-employeur.guichetemplois.gc.ca',
                'www.on-employeur.guichetemplois.gc.ca',
                'sk-employeur.guichetemplois.gc.ca',
                'www.sk-employeur.guichetemplois.gc.ca',
                'ab-employeur.guichetemplois.gc.ca',
                'www.ab-employeur.guichetemplois.gc.ca',
                'bc-employeur.guichetemplois.gc.ca',
                'www.bc-employeur.guichetemplois.gc.ca',
                'mb-employeur.guichetemplois.gc.ca',
                'www.mb-employeur.guichetemplois.gc.ca',
                'nb-employeur.guichetemplois.gc.ca',
                'www.nb-employeur.guichetemplois.gc.ca',
                'nl-employeur.guichetemplois.gc.ca',
                'www.nl-employeur.guichetemplois.gc.ca',
                'ns-employeur.guichetemplois.gc.ca',
                'www.ns-employeur.guichetemplois.gc.ca',
                'nt-employeur.guichetemplois.gc.ca',
                'www.nt-employeur.guichetemplois.gc.ca',
                'nu-employeur.guichetemplois.gc.ca',
                'www.nu-employeur.guichetemplois.gc.ca',
                'qc-employeur.guichetemplois.gc.ca',
                'www.qc-employeur.guichetemplois.gc.ca',
                'pe-employeur.guichetemplois.gc.ca',
                'www.pe-employeur.guichetemplois.gc.ca',
                'yt-employeur.guichetemplois.gc.ca',
                'www.yt-employeur.guichetemplois.gc.ca',
                'eservices.canada.ca',
                'estimateurpcph-cdbestimator.service.canada.ca',
                'horizons.service.canada.ca',
                'offices.service.canada.ca',
                'bureaux.service.canada.ca',

                //Environment And Climate Change Canada
                //staging
                'intranet-qa.np.ec.cloud-nuage.gc.ca',
                //Prod
                'intranet.ec.cloud-nuage.gc.ca',


                //Global Affairs Canada
                //staging
                'dubai.d.r.dfait-maeci.gc.ca',
                'www.dubai.d.r.dfait-maeci.gc.ca',
                'expo2025.canada.ca',
                'www.expo2025.canada.ca',
                'dv05.international.gc.ca',
                'www.dv05.international.gc.ca',
                'core.canada.ca',
                'ocre.canada.ca',
                //Prod
                'www.intra',
                'intra',
                'www.intranet',
                'intranet',
                'www.international.gc.ca',
                'international.gc.ca',
                'www.travel.gc.ca',
                'travel.gc.ca',
                'www.voyage.gc.ca',
                'voyage.gc.ca',
                'www.tradecommissioner.gc.ca',
                'tradecommissioner.gc.ca',
                'www.deleguescommerciaux.gc.ca',
                'deleguescommerciaux.gc.ca',
                'www.educanada.ca',
                'educanada.ca',
                'www.core-ombuds.canada.ca',
                'core-ombuds.canada.ca',
                'www.ocre-ombuds.canada.ca',
                'ocre-ombuds.canada.ca',
                'www.intranet.signet.international.gc.ca',
                'intranet.signet.international.gc.ca',
                'www.intra.signet.international.gc.ca',
                'intra.signet.international.gc.ca',
                'international.canada.ca',
                'w05.international.gc.ca',


                //Health Canada
                //staging
                'dev.healthycanadians.gc.ca',
                'dev.canadiensensante.gc.ca',
                'sad-drlsrv-dev.hc-sc.gc.ca',
                'www.rsams.dev.cloud.openplus.ca',
                'rsams.dev.cloud.openplus.ca',
                'food-guide-stage.hpfb-dgpsa.ca',
                'guide-alimentaire-stage.hpfb-dgpsa.ca',
                //Prod
                'www.health.canada.ca',
                'health.canada.ca',
                'www.sante.canada.ca',
                'sante.canada.ca',
                'mysource.hc-sc.gc.ca',
                'recalls-rappels.canada.ca',
                'www.recalls-rappels.canada.ca',
                'food-guide.canada.ca',
                'guide-alimentaire.canada.ca',
                'clinical-information.canada.ca',
                'renseignements-cliniques.canada.ca',

                //Housing, Infrastructure and Communities Canada
                //staging
                'internet3-test.infc.gc.ca',
                //Prod
                'www.infrastructure.gc.ca',
                'infranet.ad.infrastructure.gc.ca',
                'housing-infrastructure.canada.ca',
                'logement-infrastructure.canada.ca',


                //Impact Assessment Agency
                //staging
                'elearning-iaac-aeic.dev.ec.gc.ca',
                'ceaa.dev.ec.gc.ca',
                'ceaa.qa.ec.gc.ca',
                //Prod
                'www.iaac-aeic.gc.ca',
                'iaac-aeic.gc.ca',
                'www.aeic-iaac.gc.ca',
                'aeic-iaac.gc.ca',
                'elearning.iaac-aeic.gc.ca',
                'www.elearning.iaac-aeic.gc.ca',
                'www.apprentissage-en-ligne.aeic-iaac.gc.ca',
                'apprentissage-en-ligne.aeic-iaac.gc.ca',


                //Immigration Refugee Canada
                //staging
                'eservices1.ci.gc.ca',
                'services3.ci.gc.ca',
                'www.services3.ci.gc.ca',
                //Prod
                'services3.cic.gc.ca',
                'www.services3.cic.gc.ca',
                'eservices.cic.gc.ca',
                'www.eservices.cic.gc.ca',
                'www.etatpasseport-passportstatus.service.canada.ca',
                'etatpasseport-passportstatus.service.canada.ca',
                'www.cic.gc.ca',
                'cic.gc.ca',
                'ircc.canada.ca',
                'atip-aiprp.apps.gc.ca',


                //Justice Canada
                //staging
                'ifolio.justice.gc.ca',
                //Prod
                'justice.gc.ca',
                'www.justice.gc.ca',
                'dmteam.justice.gc.ca',
                'laws.justice.gc.ca',
                'lois.justice.gc.ca',
                'laws-lois.justice.gc.ca',
                'lois-laws.justice.gc.ca',
                'jusnet.justice.gc.ca',
                'victimsweek.gc.ca',
                'semainedesvictimes.gc.ca',
                'www.victimsweek.gc.ca',
                'www.semainedesvictimes.gc.ca',
                'www.victimsfirst.gc.ca',
                'www.victimesdabord.gc.ca',
                'victimsfirst.gc.ca',
                'victimesdabord.gc.ca',
                'equipesm.justice.gc.ca',


                //Library and Archive Canada
                //staging
                'www.dev2-www.bac-lac.gc.ca',
                'dev2-www.bac-lac.gc.ca',
                'dev-www.bac-lac.gc.ca',
                'dev-collection-search.bac-lac.gc.ca',
                'www.dev-collection-search.bac-lac.gc.ca',
                //Prod
                'www.library-archives.canada.ca',
                'library-archives.canada.ca',
                'www.bibliotheque-archives.canada.ca',
                'bibliotheque-archives.canada.ca',
                'recherche-collection-search.bac-lac.gc.ca',
                'www.bac-lac.gc.ca',
                'bac-lac.gc.ca',
                'www.lac-bac.gc.ca',
                'lac-bac.gc.ca',
                'www.cipbookentry.bac-lac.gc.ca',
                'cipbookentry.bac-lac.gc.ca',
                'www.sigles-symbols.bac-lac.gc.ca',
                'sigles-symbols.bac-lac.gc.ca',
                'www.event.bac-lac.gc.ca',
                'event.bac-lac.gc.ca',
                'www.marc21.ca',
                'www.financement-funding.bac-lac.gc.ca',
                'financement-funding.bac-lac.gc.ca',
                'www.tdg-grt.bac-lac.gc.ca',
                'tdg-grt.bac-lac.gc.ca',

                //Natural Resources Canada
                //staging
                'www.dev.nrcan.gc.ca',
                'dev.nrcan.gc.ca',
                'www.dev.rncan.gc.ca',
                'dev.rncan.gc.ca',
                'uat-osdp-psdo.canada.ca',
                'test.nrcan.gc.ca',
                'www.test.nrcan.gc.ca',
                'dev.mpmo.gc.ca',
                'cms-test.osdp-psdo.canada.ca',
                'intranet.test.nrcan.gc.ca',
                'www.intranet.test.nrcan.gc.ca',
                'intranet.test.rncan.gc.ca',
                'www.intranet.test.rncan.gc.ca',
                'app-website-cwfis-dev.azurewebsites.net',
                'dev-natural-resources.azure.cloud.nrcan-rncan.gc.ca',
                'dev-intranet-nrcan.azure.cloud.nrcan-rncan.gc.ca',
                'dev-ressources-naturelles.azure.cloud.nrcan-rncan.gc.ca',
                'dev-intranet-rncan.azure.cloud.nrcan-rncan.gc.ca',
                'prod-natural-resources.azure.cloud.nrcan-rncan.gc.ca',
                'prod-ressources-naturelles.azure.cloud.nrcan-rncan.gc.ca',
                'dev-northern-pipeline.azure.cloud.nrcan-rncan.gc.ca',
                'dev-pipe-line-nord.azure.cloud.nrcan-rncan.gc.ca',
                'prod-intranet-nrcan.azure.cloud.nrcan-rncan.gc.ca',
                //Prod
                'osdp-cumulative-effects.canada.ca',
                'psdo-effets-cumulatifs.canada.ca',
                'www.nrcan.gc.ca',
                'www.rncan.gc.ca',
                'nrcan.gc.ca',
                'rncan.gc.ca',
                'npa.gc.ca',
                'apn.gc.ca',
                'mpmo.gc.ca',
                'bggp.gc.ca',
                'www.esrfunds.org',
                'www.fondsee.org',
                'www.rncanengagenrcan.ca',
                'www.minescanada.ca',
                'www.equalby30.org',
                'nrcan.canada.ca',
                'www.nrcan.canada.ca',
                'rncan.canada.ca',
                'www.rncan.canada.ca',
                'natural-resources.canada.ca',
                'www.natural-resources.canada.ca',
                'ressources-naturelles.canada.ca',
                'www.ressources-naturelles.canada.ca',
                'major-projects.canada.ca',
                'www.major-projects.canada.ca',
                'grands-projets.canada.ca',
                'www.grands-projets.canada.ca',
                'northern-pipeline.canada.ca',
                'www.northern-pipeline.canada.ca',
                'pipe-line-nord.canada.ca',
                'www.pipe-line-nord.canada.ca',
                'osdp-psdo.canada.ca',
                'www.geo.ca',
                'geo.ca',
                'intranet.nrcan.gc.ca',
                'intranet.rncan.gc.ca',


                //Office of the Procurement Ombudsman
                //staging
                'dev.boa-opo.gc.ca',
                'www.dev.boa-opo.gc.ca',
                'xterra3w2k16.dev.ad.itsso-ospti.gc.ca',
                'www.xterra3w2k16.dev.ad.itsso-ospti.gc.ca',
                //Prod
                'www.opo-boa.gc.ca',
                'opo-boa.gc.ca',
                'secure.opo-boa.gc.ca',
                'www.secure.opo-boa.gc.ca',

                //Office of the Superintendent of Financial Institutions
                //staging
                'www.web-dev.osfi-bsif.gc.ca',
                'web-dev.osfi-bsif.gc.ca',
                'uatintranet.osfi-bsif.gc.ca',
                //Prod
                'osfi-bsif.gc.ca',
                'www.osfi-bsif.gc.ca',
                'www.intranet.osfi-bsif.gc.ca',
                'intranet.osfi-bsif.gc.ca',

                //Public Safety
                //staging
                'psdev',
                'gpdev',
                'icdev',
                //Prod
                'www.publicsafety.gc.ca',
                'www.securitepublique.gc.ca',
                'www.getprepared.gc.ca',
                'www.preparez-vous.gc.ca',
                'www.erc-cee.gc.ca',
                'infocentral',
                'infocentrale',

                //Public Service Commission
                //staging
                'test-psjobs-emploisfp.psc-cfp.gc.ca',
                'test-emploisfp-psjobs.cfp-psc.gc.ca',
                'intradev',
                'devextranet.psc-cfp.gc.ca',
                //Prod
                'extranet.psc-cfp.gc.ca',
                'www.extranet.psc-cfp.gc.ca',
                'intracom',
                'www.intracom',
                'www5.psc-cfp.gc.ca',
                'intracom.psc-cfp.gc.ca',
                'emploisfp-psjobs.cfp-psc.gc.ca',
                'psjobs-emploisfp.psc-cfp.gc.ca',

                // Public Services and Procurement Canada
                //staging
                'www.mapayegc-mygcpay-preprod.tpsgc-pwgsc.gc.ca',
                'mapayegc-mygcpay-preprod.tpsgc-pwgsc.gc.ca',
                'rate01.gcsurplus.ca',
                'buyandsell.gc.ca',
                'ont-intradev.pwgsc-tpsgc.gc.ca',
                'www.ont-intradev.pwgsc-tpsgc.gc.ca',
                'ont-extradev.pwgsc-tpsgc.gc.ca',
                'www.ont-extradev.pwgsc-tpsgc.gc.ca',
                'ont-internetdev.pwgsc-tpsgc.gc.ca',
                'www.ont-internetdev.pwgsc-tpsgc.gc.ca',
                'ont-internetdev.tpsgc-pwgsc.gc.ca',
                'www.ont-internetdev.tpsgc-pwgsc.gc.ca',
                'staging.achatscanadabuys.ca',
                'stagingfr.achatscanadabuys.ca',
                'www.preprod.mapayegc-mygcpay.gc.ca',
                'preprod.mapayegc-mygcpay.gc.ca',
                'viclaplinux12.jea.lan',
                'aatesting-penweb.work.int.jea-engr.ca',
                'bravopenweb07.dev.jea.lan',
                'beta.sosa.canadabuys.canada.ca',
                'beta.ocama.achatscanada.canada.ca',
                'pension-tfix1.tpsgc-pwgsc.gc.ca',
                'pension-ptest1.tpsgc-pwgsc.gc.ca',
                'pension-cate1.tpsgc-pwgsc.gc.ca',
                'pension-pfix1.tpsgc-pwgsc.gc.ca',
                'pension-pfix3.tpsgc-pwgsc.gc.ca',
                'pension-pint1.tpsgc-pwgsc.gc.ca',
                'pension-pint3.tpsgc-pwgsc.gc.ca',
                'laptop-hsu.jea.lan',
                'beta.buyandsell.gc.ca',
                'beta.achatsetventes.gc.ca',
                'webdev02.tpsgc-pwgsc.gc.ca',
                'www.tpsgc-pwgsc.gc.ca',
                'geobatiments-dev.tpsgc.gc.ca',
                'geobatiments-geobuildings-dev.tpsgc-pwgsc.gc.ca',
                'geobatiments-uat.tpsgc.gc.ca',
                'geobatiments-geobuildings-uat.tpsgc-pwgsc.gc.ca',
                'tplus-pp.btb.gc.ca',
                'www.tplus-pp.btb.gc.ca',
                'dev-gaz.ncr.pwgsc.gc.ca',
                'www.dev-gaz.ncr.pwgsc.gc.ca',
                'intranet-uat.que.tpsgc.gc.ca',
                'www.intranet-uat.que.tpsgc.gc.ca',
                'intranet-uat.que.pwgsc.gc.ca',
                'www.intranet-uat.que.pwgsc.gc.ca',
                'intranet-dev.que.pwgsc.gc.ca',
                'www.intranet-dev.que.pwgsc.gc.ca',
                'intranet-dev.que.tpsgc.gc.ca',
                'www.intranet-dev.que.tpsgc.gc.ca',
                'test.publications.gc.ca',
                'www.test.publications.gc.ca',
                'webdev01.tpsgc-pwgsc.gc.ca',
                'www.webdev01.tpsgc-pwgsc.gc.ca',
                'dev-webpubrcmp.tpsgc-pwgsc.gc.ca',
                'gclp9-pp.btb.gc.ca',
                'publications-dev.aws.tpsgc-pwgsc.cloud-nuage.canada.ca',
                'dev-publication-w2k19.ncr.pwgsc.gc.ca',
                //Prod
                'www.mapayegc-mygcpay.tpsgc-pwgsc.gc.ca',
                'mapayegc-mygcpay.tpsgc-pwgsc.gc.ca',
                'www.orion.pwgsc-tpsgc.gc.ca',
                'orion.pwgsc-tpsgc.gc.ca',
                'www.cnas-nscc.tpsgc-pwgsc.gc.ca',
                'cnas-nscc.tpsgc-pwgsc.gc.ca',
                'www.gcsurplus.ca',
                'gcsurplus.ca',
                'www.ontario.tpsgc-pwgsc.gc.ca',
                'ontario.tpsgc-pwgsc.gc.ca',
                'clientsontario.pwgsc-tpsgc.gc.ca',
                'www.clientsontario.pwgsc-tpsgc.gc.ca',
                'ont-sat-ths.tpsgc-pwgsc.gc.ca',
                'www.ont-sat-ths.tpsgc-pwgsc.gc.ca',
                'www.canadabuys.canada.ca',
                'canadabuys.canada.ca',
                'achatscanada.canada.ca',
                'www.mapayegc-mygcpay.gc.ca',
                'mapayegc-mygcpay.gc.ca',
                'sosa.canadabuys.canada.ca',
                'ocama.achatscanada.canada.ca',
                'www.noslangues-ourlanguages.gc.ca',
                'noslangues-ourlanguages.gc.ca',
                'www.btb.termiumplus.gc.ca',
                'btb.termiumplus.gc.ca',
                'canadagazette.gc.ca',
                'www.canadagazette.gc.ca',
                'gazette.gc.ca',
                'www.gazette.gc.ca',
                'www.geobatiments-geobuildings.tpsgc-pwgsc.gc.ca',
                'geobatiments-geobuildings.tpsgc-pwgsc.gc.ca',
                'geobatiments.tpsgc.gc.ca',
                'www.geobatiments.tpsgc.gc.ca',
                'geobuildings.pwgsc.gc.ca',
                'www.geobuildings.pwgsc.gc.ca',
                'intranet.que.tpsgc.gc.ca',
                'www.intranet.que.tpsgc.gc.ca',
                'intranet.que.pwgsc.gc.ca',
                'www.intranet.que.pwgsc.gc.ca',
                'intranet.tpsgc-pwgsc.gc.ca',
                'www.intranet.tpsgc-pwgsc.gc.ca',
                'www.publications.gc.ca',
                'publications.gc.ca',
                'rcmp-grc.pension.gc.ca',
                'achatsetventes.gc.ca',
                'masource-mysource.spac-pspc.gc.ca',
                'gcintranet.tpsgc-pwgsc.gc.ca',
                'www.tpsgc-pwgsc.gc.ca',

                //Shared Service Canada
                //staging
                'plus-test.ssc-spc.gc.ca',
                'service-test.ssc-spc.gc.ca',
                //Prod
                'www.plus.ssc-spc.gc.ca',
                'plus.ssc-spc.gc.ca',

                //StatCan
                //staging
                'census.gc.ca',
                'recensement.gc.ca',
                'stc-ndm-new-qa-pc2.statcan.gc.ca',
                'cancer-dev.stc.ca',
                'www159-dev.stc.ca',
                'census-cws-alpha.prod.cloud.statcan.ca',
                //Prod
                'www.statcan.gc.ca',
                'statcan.gc.ca',
                'www23.statcan.gc.ca',
                'www65.statcan.gc.ca',
                'www66.statcan.gc.ca',
                'www144.statcan.gc.ca',
                'www150.statcan.gc.ca',
                'www159.statcan.gc.ca',
                'www160.statcan.gc.ca',
                'geosuite.statcan.gc.ca',
                'geoprod.statcan.gc.ca',
                'cancer-data.canada.ca',
                'donnees-cancer.canada.ca',
                'www.cancer-data.canada.ca',
                'www.donnees-cancer.canada.ca',
                'www.geosuite.statcan.gc.ca',
                'www.geoprod.statcan.gc.ca',
                'information-energie.canada.ca',
                'energy-information.canada.ca',
                'www12.statcan.gc.ca',
                'www.information-energie.canada.ca',
                'www.energy-information.canada.ca',
                'census.gc.ca',
                'recensement.gc.ca',
                'www.census.gc.ca',
                'www.recensement.gc.ca',

                //Treasury Board of Canada Secretariat
                //staging
                'staging.open.canada.ca',
                'uat.tbs-sct.canada.ca',
                'www.uat.tbs-sct.canada.ca',
                'uat.infosite.tbs-sct.gc.ca',
                'uat.solo.tbs-sct.gc.ca',
                'www.uat.solo.tbs-sct.gc.ca',
                'uat.hranalytics-analytiquerh.tbs-sct.gc.ca',
                'www.uat.hranalytics-analytiquerh.tbs-sct.gc.ca',
                //Prod
                'open.canada.ca',
                'search.open.canada.ca',
                'ouvert.canada.ca',
                'rechercher.ouvert.canada.ca',
                'www.tbs-sct.gc.ca',
                'www.tbs-sct.canada.ca',
                'infosite.tbs-sct.gc.ca'


            ]
        };




        /* ===== Set data elements that rely on allowlist ===== */

        /*jsAbort START*/

        var list;
        var h = document.location.hostname.toLowerCase(); //host
        var j = document.location.pathname.toLowerCase(); //path

        if (_satellite.environment.stage == "production") {
            list = _satellite.gcCustom.domain_allowlist.live;
        }
        else {
            list = _satellite.gcCustom.domain_allowlist.stage;
        }

        // excl list cannot be empty
        // list can be domains or directories
        excl = _satellite.gcCustom.domain_blocklist

        var j = document.location.host + document.location.pathname.toLowerCase(); //path
        var toExcl = false; //set to false by default
        for (var i in excl) {
            if (j.indexOf(excl[i]) > -1) {
                toExcl = true;
            }
        }
        //end directory exclusions

        //sets the data element
        if (typeof list[h] === 'undefined' || toExcl === true) {
            _satellite.setVar('jsAbort', 'true'); //set to true
            window.blockList = 'yes';
            _satellite.cookie.set('prev_page_blockList', 'yes')
        }
        else {
            _satellite.gcCustom.thisDomain = list[h];
            _satellite.setVar('jsAbort', 'false'); //set to false allows rules to fire
            window.blockList = 'no';
        }

        /*jsAbort END*/

    </script>
    <script>
        //
        // Check if the current Browser are WebAuth capable (FIDO Alliance).
        //

        var webAuthCapable = "webAuth not returned in time";

        PublicKeyCredential && PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable && PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable()
            .then((available) => {
                if (available) {
                    webAuthCapable = "webAuth enabled"; // The visitor's device is capable for WebAuth
                } else {
                    webAuthCapable = "webAuth not enabled"; // The visitor's device is not capable for WebAuth or that feature is somehow deactivated.
                }
                _satellite.logger.info(webAuthCapable);
            }).catch((err) => {
                webAuthCapable = "API error"
                _satellite.logger.info(webAuthCapable)
            });
    </script>
    <script>
        s
    </script>
    <script>
        document.addEventListener(adobe.target.event.REQUEST_SUCCEEDED, function (e) {
            window.ttMETA = typeof (window.ttMETA) != "undefined" ? window.ttMETA : [];

            var tokens = e.detail.responseTokens;

            if (isEmpty(tokens)) {
                return;
            }

            var uniqueTokens = distinct(tokens);

            uniqueTokens.forEach(function (token) {
                window.ttMETA.push({
                    'ActivityName': token["activity.name"],
                    'ActivityId': token["activity.id"],
                    'ExperienceName': token["experience.name"],
                    'ExperienceId': token["experience.id"],
                    'OfferId': token["offer.id"],
                    'OfferName': token["offer.name"],
                    'GeoCity': token["geo.city"],
                    'GeoState': token["geo.state"],
                    'MboxName': e.detail.mbox
                });
            });
        });

        function isEmpty(val) {
            return (val === undefined || val == null || val.length <= 0) ? true : false;
        }

        function key(obj) {
            return Object.keys(obj)
                .map(function (k) { return k + "" + obj[k]; })
                .join("");
        }

        function distinct(arr) {
            var result = arr.reduce(function (acc, e) {
                acc[key(e)] = e;
                return acc;
            }, {});

            return Object.keys(result)
                .map(function (k) { return result[k]; });
        }
    </script>
    <div id="bg" data-wb-randomize="{&quot;shuffle&quot;:true, &quot;selector&quot;: &quot;img&quot;, &quot;toggle&quot;: &quot;hide&quot; }" class="wb-init wb-randomize-inited">
        <img class="hide" src="/content/dam/canada/splash/sp-bg-2.jpg" alt="">
        <img class="" src="/content/dam/canada/splash/sp-bg-3.jpg" alt="">
        <img class="hide" src="/content/dam/canada/splash/sp-bg-5.jpg" alt="">
        <img class="hide" src="/content/dam/canada/splash/sp-bg-1.jpg" alt="">
        <img class="hide" src="/content/dam/canada/splash/sp-bg-1.jpg" alt="">
        <img class="hide" src="/content/dam/canada/splash/sp-bg-4.jpg" alt="">

    </div>

    <main property="mainContentOfPage" resource="#wb-main" typeof="WebPageElement">
        <div class="sp-hb">
            <div class="sp-bx col-xs-12">
                <h1 property="name" class="wb-inv">Canada.ca</h1>
                <div class="row">
                    <div class="col-xs-11 col-md-8" property="publisher" resource="#wb-publisher" typeof="GovernmentOrganization">

                        <img src="~/lib/themes-dist-17.2.0-gcweb/GCWeb/assets/sig-blk-en.svg" alt="Government of Canada" property="logo" width="283">
                        <span class="wb-inv"> / <span lang="fr">Gouvernement du Canada</span></span>
                        <meta property="name" content="Government of Canada">
                        <meta property="name" lang="fr" content="Gouvernement du Canada">


                        <meta property="areaServed" typeof="Country" content="Canada">
                    </div>
                </div>
                <div class="row">

                    <section class="col-xs-6 text-right">
                        <h2 class="wb-inv">Government of Canada</h2>
                        <p><a href="Select/?culture=en" class="btn btn-primary" translate="no">English</a></p>
                    </section>
                    <section class="col-xs-6" lang="fr">
                        <h2 class="wb-inv">Gouvernement du Canada</h2>
                        <p><a href="Select/?culture=fr" class="btn btn-primary" translate="no">Français</a></p>
                    </section>


                </div>
            </div>
            <div class="sp-bx-bt col-xs-12">
                <div class="row">
                    <div class="col-xs-7 col-md-8">

                        <a href="/en/transparency/terms.html" class="sp-lk">Terms &amp; conditions</a> <span class="glyphicon glyphicon-asterisk"></span> <a href="/fr/transparence/avis.html" class="sp-lk" lang="fr">Avis</a>


                    </div>

                    <div class="col-xs-5 col-md-4 text-right mrgn-bttm-md">

                        <img src="~/lib/themes-dist-17.2.0-gcweb/GCWeb/assets/wmms-blk.svg" width="127" alt="Symbol of the Government of Canada"><span class="wb-inv"> / <span lang="fr">Symbole du gouvernement du Canada</span></span>


                    </div>
                </div>
            </div>
        </div>
    </main>


    <script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script src="/etc/designs/canada/wet-boew/js/wet-boew.min.js"></script>
    <span id="wb-rsz" class="wb-init">&nbsp;</span>

    <script src="/etc/designs/canada/wet-boew/js/theme.min.js"></script>


    <script type="text/javascript">_satellite.pageBottom();</script>




    <script>
        let botDetected = false;
        let triggeredStatement = "";

        const checks = [
            { condition: navigator.webdriver, statement: "1. navigator.webdriver is true" },
            { condition: /HeadlessChrome/.test(window.navigator.userAgent), statement: "2. HeadlessChrome" },
            { condition: document.documentElement.getAttributeNames().some((attr) => ["selenium", "webdriver", "driver"].includes(attr)), statement: "3. Selenium/WebDriver attribute detected" },
            { condition: /phantomjs/i.test(window.navigator.userAgent), statement: "4. PhantomJS detected in userAgent" },
            { condition: /chrome/i.test(window.navigator.userAgent) && !window.chrome, statement: "5. window.chrome is missing" },
            { condition: !/android/i.test(window.navigator.userAgent) && navigator.plugins.length === 0, statement: "6. No plugins detected" }, // remove Android check once most devices are version 15+
            { condition: navigator.languages === "", statement: "7. No languages detected" },
            { condition: !window.navigator.deviceMemory, statement: "8. Missing device memory" },
            { condition: !window.navigator.hardwareConcurrency, statement: "9. Missing hardware concurrency" },
            { condition: window.navigator.connection && !window.navigator.connection.effectiveType, statement: "10. Missing network information" },
            { condition: !window.navigator.platform, statement: "11. Missing platform information" },
            { condition: Notification.permission === 'denied' && navigator.permissions.query({ name: 'notifications' }).then(permissionStatus => permissionStatus.state === 'prompt'), statement: "12. Notification permission denied" }
        ];

        // return first triggered attribute, set jsBotAttribute
        for (const check of checks) {
            if (check.condition) {
                botDetected = true;
                triggeredStatement = check.statement;
                _satellite.setVar("BotAttribute", triggeredStatement);
                break; // Stop after the first triggered condition
            }
        }

        // if botDetected is triggered, set jsBot
        if (botDetected) {
            _satellite.setVar("Bot", "Bot Detected");
        }
    </script>
    <script>
        const performanceObserver = new PerformanceObserver((list) => {
            const entries = list.getEntries();

            entries.forEach((entry) => {
                switch (entry.entryType) {
                    case 'navigation':
                        if (entry.domComplete !== 0) {
                            var host = _satellite.getVar('CookieHost')
                            _satellite.cookie.set("DomComplete", Math.round(entry.domComplete), { domain: host });
                        }
                        break;
                    case 'largest-contentful-paint':
                        const lcp = entries[entries.length - 1];
                        // identify largest element, uncomment for debugging individual pages
                        //_satellite.logger.info('The LCP is:', lcp.element)
                        localStorage.setItem('LCP', Math.round(entry.startTime));
                        break;
                    case 'paint':
                        if (entry.name === 'first-contentful-paint') {
                            localStorage.setItem('FCP', Math.round(entry.startTime));
                        }
                        break;
                    default:
                        break;
                }
            });
        });

        performanceObserver.observe({ type: 'navigation', buffered: true });
        performanceObserver.observe({ type: 'largest-contentful-paint', buffered: true });
        performanceObserver.observe({ type: 'paint', buffered: true });
    </script>
    <script>
        //***************************************************
        /*****


        -----------------------
        Invitation Manager v1.0-----------------------

        Dependencies on _satellite object
            *	_satellite.gcCustom (adds new functions to this object)
            *	_satellite.browserInfo.browser
            *	_satellite.getVar("PageTheme-PageLanguage")
            *	_satellite.getVar("PageCreator")
            *	_satellite.getVar("ErrorPageType")-


        Dependencies on s_c_il[1] object
            *	s_c_il[1].eVar4

        *****/
        //***************************************************


        _satellite.gcCustom.storage = {
            set: function (n, v, e) {
                var o = { val: v, t: new Date().getTime() + e * 86400 }
                var t = (e === 0) ? sessionStorage : localStorage;
                t.setItem(n, JSON.stringify(o));
            },
            get: function (n) {
                var b = sessionStorage.getItem(n);
                if (b != null)
                    return JSON.parse(b).val;
                else
                    b = localStorage.getItem(n);
                if (b != null) {
                    var c = JSON.parse(b);
                    if (c.t > new Date().getTime())
                        return c.val;
                }
                return null;
            },
            remove: function (n) {
                sessionStorage.removeItem(n);
                localStorage.removeItem(n);
            }
        }

        window.addEventListener("load", imSetup);

        function imSetup() {
            "use strict";

            //document each variables purpose

            var debugMode, //if true, log console info
                surveyDB, //JSON var of data stored in im.xml
                surveyScope, //string of what survey page, institution, theme...
                overrideScope = false,  //query parameter sets this to a text value to force the scope hat
                overrideStart = false,  //query parameter sets this to true to ignore the start date of surveys
                overrideID, //query parameter sets this to an id value for a specific survey
                dtmSettings = {

                    //page types that im.xml is not allowed ( = false) to run on
                    enablePages: {
                        404: false,
                        500: false,
                        403: false,
                        splash: false
                    },

                    //name of local or session storage values
                    storageNames: {
                        persistent: "im-invited",
                        session: "im-settings"
                    },

                    //location of im.xml
                    dbURL: "/content/dam/canada/json/im.xml"
                };
            try {
                //	Test if local storage is available/enabled before starting
                var mod = "test";
                localStorage.setItem(mod, mod);
                localStorage.removeItem(mod);
                main();
            } catch (e) {
                return false;
            }


            function main() {

                //Enable console logging if debug mode is turned on
                debugMode = checkEnableDebugMode();

                clog("Start");

                //Make sure IM is allowed to run on this page type
                if (checkPageTypeAllowed() === false)
                    return;

                //check if any special parameters are used for testing reasons
                checkTestParams();

                //if user has not seen a survey
                if (localStorage.getItem('lastDateIMShown') === null) {

                    //check if DB is already in session storage
                    surveyDB = _satellite.gcCustom.storage.get(dtmSettings.storageNames.session)

                    //download the DB if it's not already stored
                    if (surveyDB == null) {
                        downloadSurveyDB();
                        //asynchronous call, do not execute code here
                    }
                    else {
                        main2();
                    }
                }
                else {
                    clog("User has seen an invitation already");


                    //	Invitation was not within the last 15 days...
                    surveyDB = _satellite.gcCustom.storage.get(dtmSettings.storageNames.session);
                    var lastDateIMShown;
                    if (localStorage.getItem('lastDateIMShown') !== null) {
                        lastDateIMShown = new Date(localStorage.getItem('lastDateIMShown'));
                    }

                    if (isStorageExpired(lastDateIMShown)) {
                        _satellite.gcCustom.storage.remove('lastDateIMShown');
                        main2();
                    }

                    // clog( "persistent IM duration: " + _satellite.gcCustom.storage.get(dtmSettings.storageNames.session.settings.persistent_cookie_duration));
                }

                //asynchronous call may have been made, do not execute code here
            }

            function main2() {
                //	Makes sure that the surveyDB object is set, it could not have been defined if localStorage was not defined and the XML is unfound on the server
                /*	To test v.settings is undefined
                if (!surveyDB) {
                    return;
                }*/

                //at this point, we don't know if the DB was just downloaded or if it was retrieved from session storage.
                //If the DB doesn't have a scopeHat then we know we need to decide on which scope hat to give
                if (typeof surveyDB.settings.scopeHat === "undefined") {
                    firstTimeSetup();
                }

                //Check if we need to override the scope hat
                //This is needed since firstTimeSetup won't run if this is not the first page of the visit
                if (overrideScope) {
                    surveyDB.settings.scopeHat = overrideScope;
                }

                surveyScope = surveyDB.settings.scopeHat;

                clog("Scope hat = " + surveyScope + ", " + surveyDB.surveys.length + " potential surveys, removing surveys outside of date range");

                // Delete all surveys that are outside of working dates
                var list = surveyDB.surveys;
                for (var i = 0; i < list.length; i++) {
                    var n = new Date().getTime();
                    if (n < new Date(list[i].start_date_time).getTime() || n >= new Date(list[i].end_date_time).getTime()) {

                        //if overriding start date and still before end date then don't delete this survey
                        if (overrideStart && n < new Date(list[i].end_date_time).getTime())
                            continue;

                        //Splice removes the element from the array
                        list.splice(i, 1);
                        //decrement i since the next record has moved to replace the current record
                        i--;
                    }
                }

                clog(surveyDB.surveys.length + " potential surveys, removing surveys based on targeting");

                // Delete all surveys that don't match browser and/or device type
                var list = surveyDB.surveys;

                for (var i = 0; i < list.length; i++) {

                    var b = true;

                    //avoid_browsers is an array of browser names to avoid the names of the browsers match those reported by _satellite.browserInfo.browser
                    var sublist = getObjArr(list[i].avoid_browsers);
                    for (var j = 0; j < sublist.length; j++)
                        if (_satellite.browserInfo.browser == sublist[j].Value)
                            b = false;

                    //target_device is either non-existant, "Desktop" or "Mobile" which matches the values in eVar 4
                    if (typeof list[i].target_device !== "undefined" && typeof list[i].target_device === "string" && !(s_c_il[1].eVar4.toLowerCase() == list[i].target_device.toLowerCase()))
                        b = false;

                    //target_language is checked against navigator.language
                    if (typeof list[i].target_language !== "undefined" && typeof list[i].target_language === "string" && !(new RegExp(list[i].target_language, 'i').test(navigator.language)))
                        b = false;


                    //if anything caused b to be false, delete the survey from the DB
                    if (b === false) {
                        list.splice(i, 1);
                        //decrement i since the next record has moved to replace the current record
                        i--;
                    }
                }

                clog(surveyDB.surveys.length + " potential surveys");

                //save the DB to session storage
                _satellite.gcCustom.storage.set(dtmSettings.storageNames.session, surveyDB, 0);

                clog("Checking whitelist");

                // Check if url on whitelist
                var list = getObjArr(surveyDB.settings.tbl_url_whitelist), a = document.location, h = a.hostname + a.pathname, didMatch = false;
                if (typeof list === "undefined")
                    return false;

                for (var i = 0; i < list.length; i++) {
                    var b = new RegExp(list[i].url, "i");
                    if (b.test(h))
                        didMatch = true;
                }
                if (didMatch === false)
                    return false;

                clog("Checking blacklist");

                //Check if url on blacklist
                var list = getObjArr(surveyDB.settings.tbl_url_blacklist), a = document.location, h = a.hostname + a.pathname;
                for (var i = 0; i < list.length; i++) {
                    if (list[i].url.toLowerCase() == h.toLowerCase())
                        return false;
                }

                clog("Removing surveys based on page attributes");

                //make a deep copy of the survey DB before we remove the applicable surveys
                //this is needed because getPageAttributeMatches will delete any surveys that match from the surveyDB list
                var cpySurveys = JSON.parse(JSON.stringify(surveyDB.surveys));

                //b will be the index of a survey in cpySurveys that was chosen otherwise it will be undefined if no survey was selected
                var b = getWeightedRandom(getPageAttributeMatches());

                /*console.dir(cpySurveys)
                    console.dir(surveyDB)*/

                if (typeof b !== "undefined") {

                    for (var j = 0; j < cpySurveys.length; j++) {
                        if (cpySurveys[j].id === b) {
                            var selectedSurveyIndex = j;
                            break;

                        }
                    }

                    clog("Select survey " + cpySurveys[selectedSurveyIndex].survey_name);

                    //assume that the visitor will ignore the survey. This way no more invitations for X days
                    //	_satellite.gcCustom.storage.set( dtmSettings.storageNames.persistent, "ignored", surveyDB.settings.persistent_cookie_duration );


                    //Show survey only if user hasn't seen it last 15 days
                    var lastDateIMShown;
                    var now = new Date();

                    if (localStorage.getItem('lastDateIMShown') !== null) {
                        lastDateIMShown = new Date(localStorage.getItem('lastDateIMShown'));
                    }

                    //	Persistent cookie duration is the number of days of minimal interval between 2 surveys
                    if (!isStorageExpired(lastDateIMShown)) {
                        //popup the survey
                        invite(cpySurveys[selectedSurveyIndex]);
                        //set the date visitor was invited
                        localStorage.setItem('lastDateIMShown', now);
                    }

                    //end 15 days conditions


                    //	popup the survey
                    //	invite(cpySurveys[b]);
                }
                else {
                    clog("No survey selected, " + surveyDB.surveys.length + " surveys remain in session storage");
                    //save the updated DB to session storage
                    //the DB must be saved here since we need to remove surveys that were applicable on this page so we don't test for them again in the visit
                    _satellite.gcCustom.storage.set(dtmSettings.storageNames.session, surveyDB, 0);
                }

            }

            function getPageAttributeMatches() {

                //Return list of valid surveys based on page / institution / theme / site and check if override survey id needed
                //Remove surveys that are valid from the surveyDB array so that when we save it, those ones are removed and not tested on future pages in the visit

                var surveySubList = {};
                var url = (document.location.hostname + document.location.pathname).toLowerCase();
                var count = 0;

                for (var i = 0; i < surveyDB.surveys.length; i++) {
                    if (overrideID) {
                        //skip this loop's logic if it's not the desired survey, therefore there's no chance it will be selected
                        if (surveyDB.surveys[i].id !== overrideID) {

                            continue;
                        }

                        //if it is the desired survey, set it's probability to 100%. Note that the desired survey must still be applicable on this page so the logic in the swtich statement still must execute meet the conditions
                        surveyDB.surveys[i].probability = 1;
                    }


                    switch (surveyDB.surveys[i].type) {
                        case "Entire site":

                            //get an object array of the sites to run the survey on
                            var sublist = getObjArr(surveyDB.surveys[i].tbl_survey_sites);

                            for (var c = 0; c < sublist.length; c++) {

                                //convert the value for the site into RegExp non-case sensitive
                                var b = new RegExp(sublist[c].site, "i");

                                //if the url matches the regEx
                                if (b.test(url)) {

                                    //store this survey's id and probability in the new object (this object is later fed to getWeightedRandom)
                                    //convert site survey probability into rate since it is between 0 and Visitor Allocation for site wide type

                                    surveySubList[surveyDB.surveys[i].id] = surveyDB.surveys[i].probability / surveyDB.settings.Site;
                                    //keep track of the number of surveys that apply so we can console log it later
                                    count++;

                                    //clog(surveyDB.surveys[i].survey_name + " " + surveyDB.surveys[i].probability + " out of " + surveyDB.settings.Site)

                                    //remove this survey from the DB, since we won't test for it on future pages
                                    surveyDB.surveys.splice(i, 1);

                                    //decrement i since the next record has moved to replace the current record
                                    i--;
                                }
                            }

                            break;

                        case "Theme":
                            var sublist = getObjArr(surveyDB.surveys[i].tbl_survey_themes);
                            for (var c = 0; c < sublist.length; c++) {
                                if (_satellite.getVar("PageTheme-PageLanguage").toLowerCase() == sublist[c].theme.toLowerCase()) {
                                    //
                                    surveySubList[surveyDB.surveys[i].id] = surveyDB.surveys[i].probability;
                                    count++;

                                    //remove the eligible survey from the DB, since we won't test for it on future pages
                                    surveyDB.surveys.splice(i, 1);
                                    //decrement i since the next record has moved to replace the current record
                                    i--;
                                }
                            }

                            break;

                        case "Institution":
                            var sublist = getObjArr(surveyDB.surveys[i].tbl_survey_institutions);
                            for (var c = 0; c < sublist.length; c++) {
                                if (_satellite.getVar("PageCreator").toLowerCase().indexOf(sublist[c].institution.toLowerCase()) === 0) {

                                    surveySubList[surveyDB.surveys[i].id] = surveyDB.surveys[i].probability;
                                    count++;

                                    //remove the eligible survey from the DB, since we won't test for it on future pages
                                    surveyDB.surveys.splice(i, 1);
                                    //decrement i since the next record has moved to replace the current record
                                    i--;
                                }
                            }

                            break;

                        case "Page":
                            var sublist = getObjArr(surveyDB.surveys[i].tbl_survey_urls);
                            for (var c = 0; c < sublist.length; c++) {
                                if (window.location.href.toLowerCase().indexOf(sublist[c].url.toLowerCase()) !== -1) {

                                    surveySubList[surveyDB.surveys[i].id] = surveyDB.surveys[i].probability;
                                    count++;

                                    //remove the eligible survey from the DB, since we won't test for it on future pages
                                    surveyDB.surveys.splice(i, 1);
                                    //decrement i since the next record has moved to replace the current record
                                    i--;
                                }
                            }

                            break;
                    }


                }
                clog(count + " potential surveys, selecting a survey");

                return surveySubList;
            }


            function firstTimeSetup() {
                //Objectives
                //Allocate a scope hat
                //Remove surveys that don't match the scope hat

                //tmpSurveyDB is where we will copy all of the wanted data from surveyDB into (this removes non applicable scope surveys)
                var tmpSurveyDB = { settings: {}, surveys: [] }

                clog("Rolling probability for scope hat");

                if (overrideScope)
                    surveyScope = overrideScope;
                else
                    surveyScope = getWeightedRandom({ "Page": surveyDB.settings.Page, "Institution": surveyDB.settings.Institution, "Theme": surveyDB.settings.Theme, "Entire site": surveyDB.settings.Site });


                //get an object array of all surveys in the DB
                var list = getObjArr(surveyDB.qry_active_surveys);

                clog(list.length + " potential surveys, removing surveys that don't match scope hat");

                for (var i = 0; i < list.length; i++) {

                    //Get only surveys that apply to this scope
                    if (list[i].type == surveyScope) {

                        //copy good surveys tmpSurveyDB
                        tmpSurveyDB.surveys[tmpSurveyDB.surveys.length] = list[i];
                    }
                }

                //put all the needed settings into tmpSurveyDB
                tmpSurveyDB.settings.Site = surveyDB.settings.Site;
                tmpSurveyDB.settings.scopeHat = surveyScope;
                tmpSurveyDB.settings.tbl_url_whitelist = surveyDB.settings.tbl_url_whitelist;
                tmpSurveyDB.settings.tbl_url_blacklist = surveyDB.settings.tbl_url_blacklist;
                tmpSurveyDB.settings.persistent_cookie_duration = surveyDB.settings.persistent_cookie_duration;

                //set surveyDB to tmpSurveyDB so we can be sure that surveyDB is the good variable
                surveyDB = tmpSurveyDB;
            }

            function getWeightedRandom(spec) {
                //Objectives
                //Given a JSON array of values and probabilities, output the weighted random selection. For example {coffee : 0.20, tea : 0.80}
                //Output nothing if no selection is made (I.E. undefined)
                var i, sum = 0, r = Math.random();
                for (i in spec) {

                    //be sure to never select something with 0% probability !, since Math.random() can be 0!
                    if (spec[i] == 0)
                        continue;
                    sum += Number(spec[i]);
                    if (r <= sum)
                        return i;
                }
            }

            function saveDbAsJSON(dbData) {
                //Objectives
                //Convert dbData into JSON
                //Set surveyDB to the dataroot node and log the version number
                var x, c;
                //clog("saveDbAsJSON()");
                try { x = $.parseXML(dbData); c = xmlToJson(x) }
                catch (e) { clog("Converting XML to JSON encountered an error: " + e.message); return false }

                surveyDB = c.dataroot;
                clog("im.xml version: " + x.documentElement.getAttribute("generated"));
                main2();
            }

            function downloadSurveyDB() {
                clog("Downloading survey database")
                var xmlHttp = new XMLHttpRequest();
                xmlHttp.onreadystatechange = function () {
                    if (xmlHttp.readyState == 4) {
                        clog("Download status = " + xmlHttp.statusText);

                        if (xmlHttp.status == 200) {
                            var b = xmlHttp.responseText;
                            if (b && b != "" && typeof (b) != "undefined")
                                saveDbAsJSON(b.replace(/\r?\n|\r/g, "").replace(/\\u[\dA-F]{4}/gi, function (match) { return String.fromCharCode(parseInt(match.replace(/\\u/g, ''), 16)) }));
                        }
                    }
                }
                xmlHttp.open("GET", dtmSettings.dbURL, true); // true for asynchronous
                xmlHttp.send(null);
            }
            //Take a date object as parameter
            function isStorageExpired(storageDate) {
                var now = new Date();
                //storageDate = new Date(storageDate);
                //	Persistent cookie duration is the number of days of minimal interval between 2 surveys
                if (((now - storageDate) <= (surveyDB.settings.persistent_cookie_duration * 86400000)) || !storageDate || typeof storageDate === "undefined") {
                    return false;
                }
                return true;
            }

            function checkTestParams() {
                //Objectives
                //action any special query parameters
                if (/[?&]im_nocookiecheck=1/i.test(document.location.search)) {
                    //delete these cookies
                    clog("Treat visitor as new visitor (deleting locally stored data)");
                    _satellite.gcCustom.storage.remove(dtmSettings.storageNames.persistent);
                    _satellite.gcCustom.storage.remove(dtmSettings.storageNames.session);
                    localStorage.removeItem('lastDateIMShown');
                }

                if ((/[?&]im_scope=page/i.test(document.location.search)))
                    overrideScope = "Page";
                else if ((/[?&]im_scope=institution/i.test(document.location.search)))
                    overrideScope = "Institution";
                else if ((/[?&]im_scope=theme/i.test(document.location.search)))
                    overrideScope = "Theme";
                else if ((/[?&]im_scope=site/i.test(document.location.search)))
                    overrideScope = "Entire site";

                if ((/[?&]im_nodatecheck=1/i.test(document.location.search)))
                    overrideStart = true;

                var b = /[?&]im_surveyid=([^?&]+)/.exec(document.location.search);
                if (b !== null)
                    overrideID = b[1];
            }

            function checkPageTypeAllowed() {
                //Objectives
                //return true if the page type is allowed and false otherwise
                var b;
                // 1.	Check if splash page
                if ($("body").hasClass("splash"))
                    b = "splash";

                // 2.	Check if 404 page
                //if (_satellite.dataElements["ErrorPageType"].default != _satellite.getVar("ErrorPageType"))
                if (_satellite.getVar("ErrorPageType") != 'blank error page type')
                    b = _satellite.getVar("ErrorPageType");

                if (b != null)
                    return dtmSettings.enablePages[b];

                return true;
            }

            function checkEnableDebugMode() {
                //Objectives
                //Set the local storage token to remember to log console info
                if (/[?&]logim=(true|1)/i.test(document.location.search))
                    localStorage.setItem('dtm-logim', 1);

                if (/[?&]logim=(false|0)/i.test(document.location.search))
                    localStorage.removeItem('dtm-logim');

                return (localStorage.getItem('dtm-logim') == 1);
            }

            /**
            * Originally from http://davidwalsh.name/convert-xml-json
            * This is a version that provides a JSON object without the attributes and places textNodes as values
            * rather than an object with the textNode in it.
            * 27/11/2012
            * Ben Chidgey
            */
            function xmlToJson(xml) {
                //Objectives
                //Convert XML into JSON

                // Create the return object
                var obj = {};

                // text node
                if (4 === xml.nodeType) {
                    obj = xml.nodeValue;
                }

                if (xml.hasChildNodes()) {
                    for (var i = 0; i < xml.childNodes.length; i++) {
                        var TEXT_NODE_TYPE_NAME = '#text',
                            item = xml.childNodes.item(i),
                            nodeName = item.nodeName,
                            content;

                        if (TEXT_NODE_TYPE_NAME === nodeName) {
                            //single textNode or next sibling has a different name
                            if ((null === xml.nextSibling) || (xml.localName !== xml.nextSibling.localName)) {
                                content = xml.textContent;

                                //we have a sibling with the same name
                            } else if (xml.localName === xml.nextSibling.localName) {
                                //if it is the first node of its parents childNodes, send it back as an array
                                content = (xml.parentElement.childNodes[0] === xml) ? [xml.textContent] : xml.textContent;
                            }
                            return content;
                        } else {
                            if ('undefined' === typeof (obj[nodeName])) {
                                obj[nodeName] = xmlToJson(item);
                            } else {
                                if ('undefined' === typeof (obj[nodeName].length)) {
                                    var old = obj[nodeName];
                                    obj[nodeName] = [];
                                    obj[nodeName].push(old);
                                }

                                obj[nodeName].push(xmlToJson(item));
                            }
                        }
                    }
                }
                return obj;
            }

            function invite(survey) {
                //Objectives
                //Display the popup given the survey parameters

                var html = "<aside id='gc-im-popup' class='survey hidden-print' tabindex='0'>" +
                    "<style scoped>" +
                    // Default (extra extra small view and over)
                    ".survey {z-index: 1000; position: relative; margin: 0 auto; margin: 0 15px;}" +
                    "#survey-close {height: 42px; line-height: 42px;}" +

                    // View class fallbacks (needed for IE9-11 - they seem to ignore JS-injected media queries unless the user manually resizes their browser window)
                    "html:not(.xxsmallview) .survey {position: fixed; bottom: 4.9em; left: 0; right: 0; margin: 0 auto; padding: 15px;}" +
                    "html:not(.xxsmallview) .survey .panel {box-shadow: 0 0 15px;}" +
                    "html:not(.xxsmallview) .survey .panel:focus {outline: 1px dotted #fff;}" +
                    "html:not(.xxsmallview) #survey-close {top: 15px; right: 15px;}" +
                    "html.xsmallview .survey {margin: 0 15px;}" +
                    "html.smallview .survey {width: 720px;}" +
                    "html.smallview #survey-close {right: 30px;}" +
                    "html.mediumview .survey {width: 470px; left: 470px; bottom: 4.2em;}" +
                    "html.largeview .survey, html.xlargeview .survey {width: 570px; left: 570px; bottom: 4.2em;}" +
                    "</style>" +
                    "<div class='panel panel-primary mrgn-bttm-0'>" +
                    "<header id='close-im' class='panel-heading'>" +
                    "<h2 class='panel-title'>" + survey["title-" + wb.lang] + "</h2>" +
                    "</header>" +
                    "<div class='panel-body'>" +
                    survey["body-" + wb.lang] +
                    /*"<p>" + survey.paragraph1 + "</p>" +
                    "<p class='mrgn-bttm-0'>" + survey.paragraph2 + "</p>" +*/
                    "<ul class='list-inline mrgn-bttm-0'>" +
                    "<li class='mrgn-tp-md'><a id='survey-yes' class='btn btn-primary' href='" + survey["link-" + wb.lang] + "' target='_blank'>" + survey["yes-" + wb.lang] + "</a></li>" +
                    "<li class='mrgn-tp-md'><button id='survey-no' class='btn btn-default survey-close'>" + survey["no-" + wb.lang] + "</button></li>" +
                    "</ul>" +
                    "</div>" +
                    "<button id='survey-close' class='mfp-close' title=" + '"' + survey["close-" + wb.lang] + '"' + ">×<span class='wb-inv'> " + survey["close-" + wb.lang] + "</span></button>" +
                    "<input type='hidden' name='popupName' value='" + survey["uniqueTitle"] + "'>" +
                    "</div>" +
                    "</aside>",
                    $html = $(html),
                    $userFocus = false,
                    overlayIsClosing,
                    cookieValue,
                    focusFlag;

                // Close the overlay if any of its links/buttons get clicked or if the escape key gets pressed.
                $html.on("click vclick mouseup keydown", function (e) {

                    // Proceed if any of the overlay's links or buttons get clicked (including middle mouse clicks) or if the escape key gets pressed within the overlay.
                    if (
                        ((e.type === "click" || e.type === "vclick") && e.which === 1 && $(e.target).closest("a, button", this).length) // Clicked/Tapped a link/button.
                        ||
                        (e.type === "mouseup" && e.which === 2 && $(e.target).closest("a", this).length) // Middle-clicked a link.
                        ||
                        ((e.type === "keydown") && (e.which === 27)) // Pressed escape key.
                    ) {

                        // add to remove added attributes to overlay when closing
                        $("#first-focus").remove();

                        // Set a flag to indicate the overlay is closing.
                        // Needed to prevent IE11 (possibly also IE8-10/Edge) from failing to return user focus when closing the overlay (due to a separate focusin event triggering too quickly and clearing the user focus variable before it's needed).
                        overlayIsClosing = 1;

                        // Hide the overlay immediately.
                        $(this).hide();

                        // Remove the overlay shortly afterwards.
                        // This is being done to prevent problems when the yes link is middle-clicked. If the overlay were to be immediately removed, middle-clicking the yes link would remove the overlay without opening the link in a new tab/window. To avoid that issue, the overlay is now getting immediately hidden, then removed a short time later.
                        setTimeout(function () { $html.empty() }, 1000);

                        // Determine the cookie's new value, depending on the ID of which link/button was clicked. Don't set the cookie's value to yes/no if the Esc key was pressed.
                        if ($(e.target).closest("#survey-yes", this).length && !((e.type === "keydown") && (e.which === 27))) {
                            cookieValue = "yes";
                        }
                        else if ($(e.target).closest("#survey-no", this).length && !((e.type === "keydown") && (e.which === 27))) {
                            cookieValue = "no";
                        }
                        else {
                            cookieValue = "closed";
                        }

                        // Return the user's focus to where they were before the overlay stole it, then delete the user focus variable.
                        // Otherwise, return the user's focus to the H1 element (or if it doesn't exist - the next element, which is likely to be main). Needed to prevent browsers from unexpectedly returning focus to the top of the page.
                        /*if ( $userFocus ) {
                          $userFocus.trigger( "setfocus.wb" );
                          $userFocus = null;
                        }
                        else {*/

                        // Does the H1 exist? If yes, focus to it.
                        // Otherwise, focus to whatever element comes after the overlay (likely main).
                        /*if ( $( "h1" ).length ) {
                          $( "h1" ).trigger( "setfocus.wb" );
                        }
                        else {
                          $html.next().trigger( "setfocus.wb" );
                        }
                      }*/

                        // focus on the beginning of the document
                        $("#wb-tphp").trigger("setfocus.wb");

                        // Set cookie.
                        // _satellite.gcCustom.storage.set( dtmSettings.storageNames.persistent, cookieValue, surveyDB.settings.persistent_cookie_duration );
                        // localStorage.setItem('lastDateIMShown', now);
                        // Remove this event handler.
                        $(this).off();


                    }



                });

                // If the user tabs out of the overlay after it was automatically focused on, return their initial focus.
                /*$html.find( ".panel" ).on( "keydown", function( e ) {

                  // Proceed if tabbing backwards from the panel container/yes link or if tabbing forward from the close button.
                  if ( ( ( ( $( e.target ).hasClass( "panel" ) || e.target.id === "survey-yes" ) && e.shiftKey) || e.target.id === "survey-close" ) && e.which === 9 && $userFocus ) {

                      // Don't focus to whatever comes directly before or after the overlay in the flow of content.
                      e.preventDefault();

                      // Return the user's focus to where they were before the overlay stole it, then delete the user focus variable.
                      $userFocus.trigger( "setfocus.wb" );
                      $userFocus = null;

                      // Remove this event handler.
                      $( this ).off( "keydown" );
                    }
                } );
                */

                // Insert the overlay directly before the <main> element.
                $("main").before($html);
                // Since jQuery fix will sanitize the target attribute, here is a quick solution to add it back right after the IM html is inserted
                $("#survey-yes").attr("target", "_blank");
                // Inset the "Skip to Invitation Manager Popup" link before the <main> element.
                if (wb.lang === "fr") {
                    $("#wb-tphp").prepend("<li id='first-focus' class='wb-slc'>" +
                        "<a  class='wb-sl' href='#gc-im-popup'>Passer au Gestionnaire des Invitations</a></li> ");
                }
                else {
                    $("#wb-tphp").prepend("<li id='first-focus' class='wb-slc'>" +
                        "<a   class='wb-sl' href='#gc-im-popup'>Skip to Invitation Manager Popup</a></li> ");
                }



                //pop-up impression for analytics

                //If the pop-up appears
                if ($('aside.survey.hidden-print').length) {
                    var popUpName = $("input[name='popupName']").val();

                    _satellite.setVar('jsPopupName', popUpName);
                    //direct call rule
                    _satellite.track('popUpImpression');

                }

                //End pop-up impression code

                // Find where the user is currently focused.
                /*$userFocus = $( document.activeElement );*/

                // Automatically focus on the overlay.
                //$html.find( ".panel" ).trigger( "setfocus.wb" );


                // After the overlay steals focus, clear the user focus variable if the user goes outside of of it.
                // It's possible to go outside of the overlay without closing or tabbing out of it (e.g. by clicking or touching outside of it or using a screen reader to navigate by links). In that scenario, the user focus variable needs to be cleared to prevent strange focusing if the user enters the overlay again afterwards and focuses out of/closes it.
                /*$( "body" ).on( "focusin mousedown", function ( e ) {*/

                // When the survey overlay first gains focus, set the focus flag variable to 1. Sometimes the overlay isn't the first thing that gains focus.
                // After the overlay has initially gained focus, once something outside of it gets focused on, clear the user focus variable. If the overlay is losing focus because it's being closed, don't do anything or else IE11 (possibly also IE8-10/Edge) will run this event handler too early and prevent the close event from returning user's focus to the right spot.
                /* if ( $( e.target ).closest( ".survey", this ).length ) {

                   if ( ! focusFlag ) {
                     focusFlag = 1;
                   }
                 }
                 else {

                   if ( ! overlayIsClosing && $userFocus ) {
                     $userFocus = null;
                   }
                 }
               } );*/
            }

            function getObjArr(o) {
                //Objectives
                //Always return an object array containing the given parameter. This allows us to loop through the object array whether there are 0, 1 or more objects in the array
                return (typeof o === "undefined") ? [] : Array.isArray(o) ? o : [o];
            }

            function clog(a) {
                //Objectives
                //log console data if debug mode is enabled
                if (debugMode)
                    console.log("Invitation Mgr: " + a);
            }
        }



    </script>
    <script>
        function MediaSetup() {
            var mltmd = jQuery(".wb-mltmd");
            var mltmdSet = new Array(mltmd.length);

            for (var i = 0; i < mltmd.length; i++) {
                var e = mltmd.get(i);
                var md = jQuery(e);
                var va = md.find("video,audio");
                if (va.length > 0) {

                    //Video Title
                    var ttl = va.attr("title");
                    if (ttl == null || ttl.length < 1) {
                        ttl = "";
                    }

                    //Video or Audio and Format (video/youtube)
                    var type = va.find("source").attr("type");
                    var frmt2 = "";
                    if (type == null || type.length < 1) {
                        type = "";
                        frmt = "";
                    }
                    else {
                        var frmt = type.split("/", 2);
                        if (frmt.length > 1)
                            frmt2 = frmt[0];
                    }

                    //Source URL
                    var src = va.find("source").attr("src");
                    if (src == null || src.length < 1) {
                        src = "";
                    }


                    mltmdSet[i] = {
                        el: e,
                        ct: 0,
                        tt: 0,
                        vid_per: 0,
                        vid_sent_per: new Array(),
                        title: ttl,
                        vidOrAud: frmt2,
                        source: src,
                        format: type,
                        playSent: false,
                        endedSent: false
                    };

                    md.on("playing timeupdate ended", jQuery.proxy(function (x) {
                        var m = jQuery(this.el);

                        switch (x.type) {
                            case "playing":
                                if (this.playSent == false) {
                                    var duration = m.find(".wb-mm-tmln-ttl span:not(.wb-inv)").text().trim();
                                    if (!/[0-9]{2}:[0-9]{2}:[0-9]{2}/.test(duration))
                                        duration = "00:00:00";
                                    if (this.tt == 0)
                                        this.tt = Math.floor(Date.parse("Thu, 01 Jan 1970, " + duration + " GMT-0400") - Date.parse("Thu, 01 Jan 1970, 00:00:00 GMT-0400"));
                                    if (this.tt !== 0) {
                                        _satellite.setVar("jsMediaTitle", this.title);
                                        _satellite.setVar("jsMediaType", this.vidOrAud);
                                        _satellite.setVar("jsMediaFormat", this.format);
                                        _satellite.setVar("jsMediaSource", this.source);
                                        _satellite.track("media play");
                                        this.playSent = true;
                                    }
                                }
                                break;
                            case "timeupdate":
                                var currentTime = m.find(".wb-mm-tmln-crrnt span:not(.wb-inv)").text().trim();
                                if (!/[0-9]{2}:[0-9]{2}:[0-9]{2}/.test(currentTime))
                                    currentTime = "00:00:00";
                                var ctime = Math.floor(Date.parse("Thu, 01 Jan 1970, " + currentTime + " GMT-0400") - Date.parse("Thu, 01 Jan 1970, 00:00:00 GMT-0400"));

                                var timeParts = 10;
                                var timeMark = Math.floor(this.tt / timeParts);

                                if (ctime !== 0) {
                                    if (this.ct !== ctime) {
                                        this.ct = ctime;
                                        for (var i = 1; i <= timeParts; i++) {
                                            if (this.ct == Math.round(timeMark * i / 1000) * 1000) {
                                                this.vid_per = (100 / timeParts) * i;
                                                i = timeParts;
                                            }
                                        }

                                        switch (this.vid_per) {
                                            case 20:
                                                var sent = jQuery.inArray(this.vid_per, this.vid_sent_per);
                                                if (sent < 0) {
                                                    _satellite.setVar("jsMediaTitle", this.title);
                                                    _satellite.setVar("jsMediaType", this.vidOrAud);
                                                    _satellite.setVar("jsMediaFormat", this.format);
                                                    _satellite.setVar("jsMediaSource", this.source);
                                                    _satellite.track("media mark 20");
                                                    this.vid_sent_per.push(this.vid_per);
                                                }
                                                break;
                                            case 50:
                                                var sent = jQuery.inArray(this.vid_per, this.vid_sent_per);
                                                if (sent < 0) {
                                                    _satellite.setVar("jsMediaTitle", this.title);
                                                    _satellite.setVar("jsMediaType", this.vidOrAud);
                                                    _satellite.setVar("jsMediaFormat", this.format);
                                                    _satellite.setVar("jsMediaSource", this.source);
                                                    _satellite.track("media mark 50");
                                                    this.vid_sent_per.push(this.vid_per);
                                                }
                                                break;
                                            case 80:
                                                var sent = jQuery.inArray(this.vid_per, this.vid_sent_per);
                                                if (sent < 0) {
                                                    _satellite.setVar("jsMediaTitle", this.title);
                                                    _satellite.setVar("jsMediaType", this.vidOrAud);
                                                    _satellite.setVar("jsMediaFormat", this.format);
                                                    _satellite.setVar("jsMediaSource", this.source);
                                                    _satellite.track("media mark 80");
                                                    this.vid_sent_per.push(this.vid_per);
                                                }
                                                break;
                                        }
                                    }
                                }
                                break;
                        }
                    }, mltmdSet[i]));
                }
            }
        }
        if (typeof jQuery === "function") {
            MediaSetup();
        } else {
            setTimeout(function () {
                if (typeof jQuery === "function") {
                    MediaSetup();
                }
            }, 500);
        }
    </script>
    <script>
        // delete alt act map cookies
        _satellite.cookie.remove('clickSourcePage')
        _satellite.cookie.remove('clickSourceURL')
        _satellite.cookie.remove('clickText')
        _satellite.cookie.remove('clickURL')

        _satellite.track('pageReset');
    </script>
    <iframe sandbox="allow-scripts allow-same-origin" title="Adobe ID Syncing iFrame" id="destination_publishing_iframe_canada_0" name="destination_publishing_iframe_canada_0_name" src="https://canada.demdex.net/dest5.html?d_nsid=0#https%3A%2F%2Fwww.canada.ca" class="aamIframeLoaded" style="display: none; width: 0px; height: 0px;"></iframe>
</body>
</html>
